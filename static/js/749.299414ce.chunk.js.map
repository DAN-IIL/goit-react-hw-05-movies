{"version":3,"file":"static/js/749.299414ce.chunk.js","mappings":"oKAkBA,IAhBkB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACmB,IAAhBF,EAAKG,QACJH,EAAKI,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACP,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,SACGI,KAFIC,EADF,KAShB,C,uFCaD,UAxBa,WACX,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IAEbE,EAAAA,EAAAA,IAAoBJ,GACjBK,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBN,EAAQM,EAAzB,IACLC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAWF,EAA7B,IACTG,QAAQT,GAAa,GACzB,GAAE,KAGD,4BACGD,IAAa,SAAC,IAAD,KACd,iCACE,wBAAI,oBACJ,SAAC,IAAD,CAAWZ,KAAMA,SAIxB,C,uJC3BD,IAAMuB,EAAQ,gCAERC,EAAU,CACRC,OAAQ,MACRC,QAAS,CACTC,OAAQ,mBACRC,cAAe,+NAIjBb,EAAsB,SAAAf,GACxB,IAAM6B,EAAG,UAAMN,EAAN,qCACT,GAAoB,IAAhBvB,EAAKG,OAET,OAAO2B,MAAMD,EAAKL,GACbR,MAAK,SAAAe,GACF,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MAEV,OAAOD,EAAIG,MACd,GACR,EAEKC,EAAmB,SAAAC,GACrB,IAAMP,EAAG,UAAMN,EAAN,8BAAoCa,EAApC,8CACT,GAAKA,EAEL,OAAON,MAAMD,EAAKL,GACjBR,MAAK,SAAAe,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,EAEKG,EAAiB,SAACC,GACpB,IAAMT,EAAG,UAAMN,EAAN,iBAAuBe,EAAvB,mBACT,GAAIA,GAAuB,KAAZA,EAEf,OAAOR,MAAMD,EAAKL,GACjBR,MAAK,SAAAe,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,EAEKK,EAAmB,SAACD,GACtB,IAAMT,EAAG,6CAAyCS,EAAzC,2BAET,OAAOR,MAAMD,EAAKL,GACjBR,MAAK,SAAAe,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,EAEKM,EAAmB,SAACF,GACtB,IAAMT,EAAG,6CAAyCS,EAAzC,kCAET,OAAOR,MAAMD,EAAKL,GACjBR,MAAK,SAAAe,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,C","sources":["components/MovieList/MovieList.jsx","page/Home/Home.jsx","service/fetchAPI.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ data }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {data.length !== 0 &&\n        data.map(({ title, id }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport { fetchTrandingMovies } from 'service/fetchAPI';\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetchTrandingMovies(setData)\n      .then(({ results }) => setData(results))\n      .catch(err => console.error('error:' + err))\n      .finally(setIsLoading(false));\n  }, []);\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      <>\n        <h1>Trending today</h1>\n        <MovieList data={data} />\n      </>\n    </main>\n  );\n};\n\nexport default Home;\n","const BASE_URL = `https://api.themoviedb.org/3/`;\n\nconst options = {\n        method: 'GET',\n        headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYTBkOGUyNTQ0ZTgxNzg3NTJlYTQ3YTI0ZGI3NjFkOCIsInN1YiI6IjY0NmQxOTYxYzM1MTRjMmIwNjg4OTdiOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.1c5ZzEt1F0rRDlRLvBxcNocvVNrwAuMtwV3umPbxDRg'\n    }\n    };\n\nconst fetchTrandingMovies = data => {\n    const url = `${BASE_URL}trending/movie/day?language=en-US`;\n    if (data.length === 0) return\n    \n    return fetch(url, options)\n        .then(res => {\n            if (!res.ok) {\n                throw new Error(`res.ok is \"${res.ok}\"`)\n            }\n            return res.json()\n        })\n}\n\nconst fetchSearchMovie = value => {\n    const url = `${BASE_URL}search/movie?query=${value}&include_adult=false&language=en-US&page=1`;\n    if (!value) return\n    \n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nconst fetchMovieById = (movieId) => {\n    const url = `${BASE_URL}movie/${movieId}?language=en-US`;\n    if(!movieId || movieId === \"\") return\n\n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nconst fetchCreditsById = (movieId) => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n    \n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nconst fetchReviewsById = (movieId) => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n\n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nexport {fetchSearchMovie, fetchTrandingMovies, fetchMovieById, fetchCreditsById, fetchReviewsById}"],"names":["data","location","useLocation","length","map","title","id","to","state","from","useState","setData","isLoading","setIsLoading","useEffect","fetchTrandingMovies","then","results","catch","err","console","error","finally","BASE_URL","options","method","headers","accept","Authorization","url","fetch","res","ok","Error","json","fetchSearchMovie","value","fetchMovieById","movieId","fetchCreditsById","fetchReviewsById"],"sourceRoot":""}