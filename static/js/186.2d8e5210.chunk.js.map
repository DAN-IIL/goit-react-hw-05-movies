{"version":3,"file":"static/js/186.2d8e5210.chunk.js","mappings":"8LAqCA,UAjCgB,WACd,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBH,GACdI,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBN,EAAeM,EAAhC,IACLC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAWF,EAA7B,GACb,GAAE,CAACP,KAGF,gCACGF,EAAYY,OAAS,IACpB,wBACGZ,EAAYa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,2BACE,wBACE,8BAAQ,WAASD,QAEnB,uBAAIC,MAJGF,EAOZ,MAGmB,IAAvBd,EAAYY,SACX,uBAAG,+CAIV,C,uJCnCD,IAAMK,EAAQ,gCAERC,EAAU,CACRC,OAAQ,MACRC,QAAS,CACTC,OAAQ,mBACRC,cAAe,+NAIjBC,EAAsB,SAAAC,GACxB,IAAMC,EAAG,UAAMR,EAAN,qCACT,GAAoB,IAAhBO,EAAKZ,OAET,OAAOc,MAAMD,EAAKP,GACbZ,MAAK,SAAAqB,GACF,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MAEV,OAAOD,EAAIG,MACd,GACR,EAEKC,EAAmB,SAAAC,GACrB,IAAMP,EAAG,UAAMR,EAAN,8BAAoCe,EAApC,8CACT,GAAKA,EAEL,OAAON,MAAMD,EAAKP,GACjBZ,MAAK,SAAAqB,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,EAEKG,EAAiB,SAAC/B,GACpB,IAAMuB,EAAG,UAAMR,EAAN,iBAAuBf,EAAvB,mBACT,GAAIA,GAAuB,KAAZA,EAEf,OAAOwB,MAAMD,EAAKP,GACjBZ,MAAK,SAAAqB,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,EAEKI,EAAmB,SAAChC,GACtB,IAAMuB,EAAG,6CAAyCvB,EAAzC,2BAET,OAAOwB,MAAMD,EAAKP,GACjBZ,MAAK,SAAAqB,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,EAEKzB,EAAmB,SAACH,GACtB,IAAMuB,EAAG,6CAAyCvB,EAAzC,kCAET,OAAOwB,MAAMD,EAAKP,GACjBZ,MAAK,SAAAqB,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,C","sources":["components/Reviews/Reviews.jsx","service/fetchAPI.js"],"sourcesContent":["import { fetchReviewsById } from '../../service/fetchAPI';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst Reviews = () => {\n  const [dataReviews, setDataReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviewsById(movieId)\n      .then(({ results }) => setDataReviews(results))\n      .catch(err => console.error('error:' + err));\n  }, [movieId])\n\n  return (\n    <>\n      {dataReviews.length > 0 && (\n        <ul>\n          {dataReviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <p>\n                  <strong>Author: {author}</strong>\n                </p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {dataReviews.length === 0 && (\n        <p>We don't have any rewievs for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;","const BASE_URL = `https://api.themoviedb.org/3/`;\n\nconst options = {\n        method: 'GET',\n        headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYTBkOGUyNTQ0ZTgxNzg3NTJlYTQ3YTI0ZGI3NjFkOCIsInN1YiI6IjY0NmQxOTYxYzM1MTRjMmIwNjg4OTdiOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.1c5ZzEt1F0rRDlRLvBxcNocvVNrwAuMtwV3umPbxDRg'\n    }\n    };\n\nconst fetchTrandingMovies = data => {\n    const url = `${BASE_URL}trending/movie/day?language=en-US`;\n    if (data.length === 0) return\n    \n    return fetch(url, options)\n        .then(res => {\n            if (!res.ok) {\n                throw new Error(`res.ok is \"${res.ok}\"`)\n            }\n            return res.json()\n        })\n}\n\nconst fetchSearchMovie = value => {\n    const url = `${BASE_URL}search/movie?query=${value}&include_adult=false&language=en-US&page=1`;\n    if (!value) return\n    \n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nconst fetchMovieById = (movieId) => {\n    const url = `${BASE_URL}movie/${movieId}?language=en-US`;\n    if(!movieId || movieId === \"\") return\n\n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nconst fetchCreditsById = (movieId) => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n    \n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nconst fetchReviewsById = (movieId) => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n\n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nexport {fetchSearchMovie, fetchTrandingMovies, fetchMovieById, fetchCreditsById, fetchReviewsById}"],"names":["useState","dataReviews","setDataReviews","movieId","useParams","useEffect","fetchReviewsById","then","results","catch","err","console","error","length","map","id","author","content","BASE_URL","options","method","headers","accept","Authorization","fetchTrandingMovies","data","url","fetch","res","ok","Error","json","fetchSearchMovie","value","fetchMovieById","fetchCreditsById"],"sourceRoot":""}