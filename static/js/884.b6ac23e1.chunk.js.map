{"version":3,"file":"static/js/884.b6ac23e1.chunk.js","mappings":"8LAwCA,UApCgB,WACd,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBH,GACdI,MAAK,YAAe,IACbC,EADY,EAAXC,KACiBC,QAAO,SAAAC,GAAK,MAAmC,WAA/BA,EAAMC,oBAAV,IACpCV,EAAYM,EACb,IACAK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAWF,EAA7B,GACb,GAAE,CAACX,KAGF,gCACGF,EAASgB,OAAS,IACjB,wBACGhB,EAASiB,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACjCC,EAAMH,EAAY,0CACeA,GADf,sCAGxB,OACE,2BACE,gBAAKI,MAAM,MAAMC,IAAG,UAAKF,GAAOG,IAAG,UAAKL,EAAL,YAAaF,MAChD,uBAAIE,KACJ,yBAAG,cAAYC,OAHRH,EAMZ,MAGgB,IAApBlB,EAASgB,SAAgB,uBAAG,+CAGlC,C,uJCtCD,IAAMU,EAAQ,gCAERC,EAAU,CACRC,OAAQ,MACRC,QAAS,CACTC,OAAQ,mBACRC,cAAe,+NAIjBC,EAAsB,SAAAC,GACxB,IAAMC,EAAG,UAAMR,EAAN,qCACT,GAAoB,IAAhBO,EAAKjB,OAET,OAAOmB,MAAMD,EAAKP,GACbrB,MAAK,SAAA8B,GACF,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MAEV,OAAOD,EAAIG,MACd,GACR,EAEKC,EAAmB,SAAAC,GACrB,IAAMP,EAAG,UAAMR,EAAN,8BAAoCe,EAApC,8CACT,GAAKA,EAEL,OAAON,MAAMD,EAAKP,GACjBrB,MAAK,SAAA8B,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,EAEKG,EAAiB,SAACxC,GACpB,IAAMgC,EAAG,UAAMR,EAAN,iBAAuBxB,EAAvB,mBACT,GAAIA,GAAuB,KAAZA,EAEf,OAAOiC,MAAMD,EAAKP,GACjBrB,MAAK,SAAA8B,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,EAEKlC,EAAmB,SAACH,GACtB,IAAMgC,EAAG,6CAAyChC,EAAzC,2BAET,OAAOiC,MAAMD,EAAKP,GACjBrB,MAAK,SAAA8B,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,EAEKI,EAAmB,SAACzC,GACtB,IAAMgC,EAAG,6CAAyChC,EAAzC,kCAET,OAAOiC,MAAMD,EAAKP,GACjBrB,MAAK,SAAA8B,GACE,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAJ,qBAAwBF,EAAIC,GAA5B,MACnB,OAAOD,EAAIG,MACd,GACR,C","sources":["components/Credits.jsx","service/fetchAPI.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchCreditsById } from '../service/fetchAPI';\n\nconst Credits = () => {\n  const [dataCast, setDataCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchCreditsById(movieId)\n      .then(({ cast }) => {\n        const filterCast = cast.filter(fCast => fCast.known_for_department === 'Acting');\n        setDataCast(filterCast);\n      })\n      .catch(err => console.error('error:' + err));\n  }, [movieId]);\n\n  return (\n    <>\n      {dataCast.length > 0 && (\n        <ul>\n          {dataCast.map(({ id, profile_path, name, character }) => {\n            const IMG = profile_path\n              ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n              : `https://via.placeholder.com/100x150`;\n            return (\n              <li key={id}>\n                <img width=\"100\" src={`${IMG}`} alt={`${name}_${id}`} />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {dataCast.length === 0 && <p>We don't have any credits for this movie</p>}\n    </>\n  );\n};\n\nexport default Credits;","const BASE_URL = `https://api.themoviedb.org/3/`;\n\nconst options = {\n        method: 'GET',\n        headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYTBkOGUyNTQ0ZTgxNzg3NTJlYTQ3YTI0ZGI3NjFkOCIsInN1YiI6IjY0NmQxOTYxYzM1MTRjMmIwNjg4OTdiOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.1c5ZzEt1F0rRDlRLvBxcNocvVNrwAuMtwV3umPbxDRg'\n    }\n    };\n\nconst fetchTrandingMovies = data => {\n    const url = `${BASE_URL}trending/movie/day?language=en-US`;\n    if (data.length === 0) return\n    \n    return fetch(url, options)\n        .then(res => {\n            if (!res.ok) {\n                throw new Error(`res.ok is \"${res.ok}\"`)\n            }\n            return res.json()\n        })\n}\n\nconst fetchSearchMovie = value => {\n    const url = `${BASE_URL}search/movie?query=${value}&include_adult=false&language=en-US&page=1`;\n    if (!value) return\n    \n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nconst fetchMovieById = (movieId) => {\n    const url = `${BASE_URL}movie/${movieId}?language=en-US`;\n    if(!movieId || movieId === \"\") return\n\n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nconst fetchCreditsById = (movieId) => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n    \n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nconst fetchReviewsById = (movieId) => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n\n    return fetch(url, options)\n    .then(res => {\n            if (!res.ok) throw new Error(`res.ok is \"${res.ok}\"`)\n            return res.json()\n        })\n}\n\nexport {fetchSearchMovie, fetchTrandingMovies, fetchMovieById, fetchCreditsById, fetchReviewsById}"],"names":["useState","dataCast","setDataCast","movieId","useParams","useEffect","fetchCreditsById","then","filterCast","cast","filter","fCast","known_for_department","catch","err","console","error","length","map","id","profile_path","name","character","IMG","width","src","alt","BASE_URL","options","method","headers","accept","Authorization","fetchTrandingMovies","data","url","fetch","res","ok","Error","json","fetchSearchMovie","value","fetchMovieById","fetchReviewsById"],"sourceRoot":""}